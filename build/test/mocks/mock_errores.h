/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ERRORES_H
#define _MOCK_ERRORES_H

#include "unity.h"
#include "errores.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_errores_Init(void);
void mock_errores_Destroy(void);
void mock_errores_Verify(void);




#define RegistrarMensaje_Ignore() RegistrarMensaje_CMockIgnore()
void RegistrarMensaje_CMockIgnore(void);
#define RegistrarMensaje_StopIgnore() RegistrarMensaje_CMockStopIgnore()
void RegistrarMensaje_CMockStopIgnore(void);
#define RegistrarMensaje_Expect(gravedad, funcion, linea, mensaje) RegistrarMensaje_CMockExpect(__LINE__, gravedad, funcion, linea, mensaje)
void RegistrarMensaje_CMockExpect(UNITY_LINE_TYPE cmock_line, gravedad_t gravedad, const char* funcion, int linea, const char* mensaje);
typedef void (* CMOCK_RegistrarMensaje_CALLBACK)(gravedad_t gravedad, const char* funcion, int linea, const char* mensaje, int cmock_num_calls);
void RegistrarMensaje_AddCallback(CMOCK_RegistrarMensaje_CALLBACK Callback);
void RegistrarMensaje_Stub(CMOCK_RegistrarMensaje_CALLBACK Callback);
#define RegistrarMensaje_StubWithCallback RegistrarMensaje_Stub
#define RegistrarMensaje_IgnoreArg_gravedad() RegistrarMensaje_CMockIgnoreArg_gravedad(__LINE__)
void RegistrarMensaje_CMockIgnoreArg_gravedad(UNITY_LINE_TYPE cmock_line);
#define RegistrarMensaje_IgnoreArg_funcion() RegistrarMensaje_CMockIgnoreArg_funcion(__LINE__)
void RegistrarMensaje_CMockIgnoreArg_funcion(UNITY_LINE_TYPE cmock_line);
#define RegistrarMensaje_IgnoreArg_linea() RegistrarMensaje_CMockIgnoreArg_linea(__LINE__)
void RegistrarMensaje_CMockIgnoreArg_linea(UNITY_LINE_TYPE cmock_line);
#define RegistrarMensaje_IgnoreArg_mensaje() RegistrarMensaje_CMockIgnoreArg_mensaje(__LINE__)
void RegistrarMensaje_CMockIgnoreArg_mensaje(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
